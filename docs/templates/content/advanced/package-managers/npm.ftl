# npm support

${solution_name} has the following npm detectors:

* npm package lock detector
* npm package shrinkwrap detector
* npm package JSON detector
* npm CLI detector

## npm package lock

The npm package lock is the preferred npm detector and runs when it finds a [package-lock.json](https://docs.npmjs.com/configuring-npm/package-lock-json.html) generated by npm.

npm automatically generates the package-lock.json after an "npm install" which should be run prior to scanning.

This is the most accurate way ${solution_name} supports npm as lock file contains resolved versions and all transitives.

## npm shrinkwrap

The npm shrinkwrap detector uses the [npm-shrinkwrap.json](https://docs.npmjs.com/files/shrinkwrap.json) file.

It is the same as a package-lock.json but is a publishable lockfile. ${solution_name} always chooses shrinkwrap over package lock.

## npm  detector

The npm CLI detector requires a package.json and an npm executable.

It executes "npm -ls json" and parses the dependencies reported by the npm CLI.

It requires that the Npm command succeeds - does not write to ERR and returns exit code 0.

If your npm command does not, you can silence the errors by adding the --silent npm argument using --detect.npm.arguments.

This detector is only invoked if the other detectors are not invoked and generating lockfiles for the other detectors should be preferred.

## npm package JSON

The npm CLI detector is the fallback when in Build mode. When in buildless the fallback detector is npm package JSON.

This is the least accurate of the npm detectors.

It requires and parses a "package.json".

It does not find transitives and only reports the wild-card version present in the file.