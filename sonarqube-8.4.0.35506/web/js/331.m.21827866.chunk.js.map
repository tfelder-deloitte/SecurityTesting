{"version":3,"sources":["webpack:///./src/main/js/apps/users/components/TokensFormItem.tsx","webpack:///./src/main/js/apps/users/components/TokensFormNewToken.tsx","webpack:///./src/main/js/apps/users/components/TokensForm.tsx","webpack:///./src/main/js/apps/users/components/UserScmAccountInput.tsx","webpack:///./src/main/js/apps/users/components/UserForm.tsx","webpack:///./src/main/js/apps/users/Header.tsx","webpack:///./src/main/js/apps/users/Search.tsx","webpack:///./src/main/js/apps/users/components/TokensFormModal.tsx","webpack:///./src/main/js/apps/users/components/DeactivateForm.tsx","webpack:///./src/main/js/apps/users/components/PasswordForm.tsx","webpack:///./src/main/js/apps/users/components/UserActions.tsx","webpack:///./src/main/js/apps/users/components/GroupsForm.tsx","webpack:///./src/main/js/apps/users/components/UserGroups.tsx","webpack:///./src/main/js/apps/users/components/UserListItemIdentity.tsx","webpack:///./src/main/js/apps/users/components/UserScmAccounts.tsx","webpack:///./src/main/js/apps/users/components/UserListItem.tsx","webpack:///./src/main/js/apps/users/UsersList.tsx","webpack:///./src/main/js/apps/users/utils.ts","webpack:///./src/main/js/apps/users/UsersApp.tsx","webpack:///./src/main/js/apps/users/UsersAppContainer.tsx","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./src/main/js/app/utils/addGlobalSuccessMessage.ts","webpack:///./src/main/js/api/user-tokens.ts","webpack:///./src/main/js/api/user_groups.ts"],"names":["mounted","state","loading","showConfirmation","handleClick","this","handleRevoke","then","setState","login","props","name","token","onRevokeToken","deleteConfirmation","overlay","className","date","lastConnectionDate","createdAt","long","confirmButtonText","isDestructive","modalBody","defaultMessage","id","values","modalHeader","onConfirm","onClick","disabled","title","TokensFormNewToken","Alert","variant","copyValue","generating","newTokenName","tokens","fetchTokens","updateTokensCount","length","handleGenerateToken","evt","preventDefault","newToken","handleRevokeToken","revokedToken","filter","handleNewTokenChange","currentTarget","value","colSpan","map","key","customSpinner","autoComplete","onSubmit","maxLength","onChange","placeholder","required","type","renderItems","handleChange","event","idx","handleRemove","onRemove","scmAccount","super","handleError","response","includes","status","errorMsg","error","throwGlobalError","handleEmailChange","email","handleLoginChange","handleNameChange","handlePasswordChange","password","handleCreateUser","undefined","scmAccounts","onUpdateUsers","onClose","handleUpdateUser","user","local","handleAddScmAccount","concat","handleUpdateScmAccount","oldScmAccounts","slice","handleRemoveScmAccount","header","size","onCloseClick","onFormSubmit","submitting","htmlFor","autoFocus","minLength","scm","openUserForm","handleOpenUserForm","handleCloseUserForm","handleSearch","search","updateQuery","query","TokensFormModal","contentLabel","onRequestClose","TokensForm","handleDeactivate","confirmPassword","newPassword","oldPassword","handleConfirmPasswordChange","handleNewPasswordChange","handleOldPasswordChange","handleChangePassword","previousPassword","addGlobalSuccessMessage","isCurrentUser","handleOpenDeactivateForm","openForm","handleOpenPasswordForm","handleOpenUpdateForm","handleCloseForm","renderActions","ActionsDropdown","destructive","fetchUsers","searchParams","organization","p","page","ps","pageSize","q","selected","data","prevState","more","groups","newSeletedGroups","gp","selectedGroups","lastSearchParams","needToReload","groupsTotalCount","paging","total","handleSelect","handleUnselect","handleCloseClick","handleClose","renderElement","group","description","elements","elementsTotalCount","SelectList","All","onSearch","onSelect","onUnselect","selectedElements","withPaging","href","showMore","handleOpenForm","toggleShowMore","limit","GROUPS_LIMIT","tooltip","UserListItemIdentity","identityProvider","externalProvider","ExternalProvider","style","backgroundColor","color","secondFontColor","alt","height","src","iconPath","width","externalIdentity","SCM_LIMIT","openTokenForm","handleOpenTokensForm","handleCloseTokensForm","organizationsEnabled","Avatar","hash","avatar","tokensCount","UsersList","currentUser","identityProviders","users","find","provider","isLoggedIn","parseQuery","urlQuery","serializeQuery","finishLoading","fetchIdentityProviders","location","fetchMoreUsers","pageIndex","newQuery","router","push","nextProps","Suggestions","suggestions","defer","count","loadMore","ready","withRouter","Consumer","addSuggestions","removeSuggestions","SuggestionsInner","prevProps","message","dispatch","getTokens","r","userTokens","generateToken","catch","revokeToken","searchUsersGroups","getUsersInGroup","addUserToGroup","removeUserFromGroup","createGroup","updateGroup","deleteGroup"],"mappings":"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","file":"js/331.m.21827866.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport ConfirmButton from 'sonar-ui-common/components/controls/ConfirmButton';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport DateFormatter from 'sonar-ui-common/components/intl/DateFormatter';\nimport DateFromNowHourPrecision from 'sonar-ui-common/components/intl/DateFromNowHourPrecision';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { limitComponentName } from 'sonar-ui-common/helpers/path';\nimport { revokeToken } from '../../../api/user-tokens';\n\nexport type TokenDeleteConfirmation = 'inline' | 'modal';\n\ninterface Props {\n  deleteConfirmation: TokenDeleteConfirmation;\n  login: string;\n  onRevokeToken: (token: T.UserToken) => void;\n  token: T.UserToken;\n}\n\ninterface State {\n  loading: boolean;\n  showConfirmation: boolean;\n}\n\nexport default class TokensFormItem extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: false, showConfirmation: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleClick = () => {\n    if (this.state.showConfirmation) {\n      this.handleRevoke().then(() => {\n        if (this.mounted) {\n          this.setState({ showConfirmation: false });\n        }\n      });\n    } else {\n      this.setState({ showConfirmation: true });\n    }\n  };\n\n  handleRevoke = () => {\n    this.setState({ loading: true });\n    return revokeToken({ login: this.props.login, name: this.props.token.name }).then(\n      () => this.props.onRevokeToken(this.props.token),\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  render() {\n    const { deleteConfirmation, token } = this.props;\n    const { loading, showConfirmation } = this.state;\n    return (\n      <tr>\n        <td>\n          <Tooltip overlay={token.name}>\n            <span>{limitComponentName(token.name)}</span>\n          </Tooltip>\n        </td>\n        <td className=\"nowrap\">\n          <DateFromNowHourPrecision date={token.lastConnectionDate} />\n        </td>\n        <td className=\"thin nowrap text-right\">\n          <DateFormatter date={token.createdAt} long={true} />\n        </td>\n        <td className=\"thin nowrap text-right\">\n          <DeferredSpinner loading={loading}>\n            <i className=\"deferred-spinner-placeholder\" />\n          </DeferredSpinner>\n          {deleteConfirmation === 'modal' ? (\n            <ConfirmButton\n              confirmButtonText={translate('users.tokens.revoke_token')}\n              isDestructive={true}\n              modalBody={\n                <FormattedMessage\n                  defaultMessage={translate('users.tokens.sure_X')}\n                  id=\"users.tokens.sure_X\"\n                  values={{ token: <strong>{token.name}</strong> }}\n                />\n              }\n              modalHeader={translate('users.tokens.revoke_token')}\n              onConfirm={this.handleRevoke}>\n              {({ onClick }) => (\n                <Button\n                  className=\"spacer-left button-red input-small\"\n                  disabled={loading}\n                  onClick={onClick}\n                  title={translate('users.tokens.revoke_token')}>\n                  {translate('users.tokens.revoke')}\n                </Button>\n              )}\n            </ConfirmButton>\n          ) : (\n            <Button\n              className=\"button-red input-small spacer-left\"\n              disabled={loading}\n              onClick={this.handleClick}>\n              {showConfirmation ? translate('users.tokens.sure') : translate('users.tokens.revoke')}\n            </Button>\n          )}\n        </td>\n      </tr>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ClipboardButton } from 'sonar-ui-common/components/controls/clipboard';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translateWithParameters } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  token: { name: string; token: string };\n}\n\nexport default function TokensFormNewToken({ token }: Props) {\n  return (\n    <div className=\"panel panel-white big-spacer-top\">\n      <Alert variant=\"warning\">\n        {translateWithParameters('users.tokens.new_token_created', token.name)}\n      </Alert>\n      <ClipboardButton copyValue={token.token} />\n      <code className=\"big-spacer-left text-success\">{token.token}</code>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { generateToken, getTokens } from '../../../api/user-tokens';\nimport TokensFormItem, { TokenDeleteConfirmation } from './TokensFormItem';\nimport TokensFormNewToken from './TokensFormNewToken';\n\ninterface Props {\n  deleteConfirmation: TokenDeleteConfirmation;\n  login: string;\n  updateTokensCount?: (login: string, tokensCount: number) => void;\n}\n\ninterface State {\n  generating: boolean;\n  loading: boolean;\n  newToken?: { name: string; token: string };\n  newTokenName: string;\n  tokens: T.UserToken[];\n}\n\nexport default class TokensForm extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    generating: false,\n    loading: true,\n    newTokenName: '',\n    tokens: []\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchTokens();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchTokens = () => {\n    this.setState({ loading: true });\n    getTokens(this.props.login).then(\n      tokens => {\n        if (this.mounted) {\n          this.setState({ loading: false, tokens });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  updateTokensCount = () => {\n    if (this.props.updateTokensCount) {\n      this.props.updateTokensCount(this.props.login, this.state.tokens.length);\n    }\n  };\n\n  handleGenerateToken = (evt: React.SyntheticEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    if (this.state.newTokenName.length > 0) {\n      this.setState({ generating: true });\n      generateToken({ name: this.state.newTokenName, login: this.props.login }).then(\n        newToken => {\n          if (this.mounted) {\n            this.setState(state => {\n              const tokens = [\n                ...state.tokens,\n                { name: newToken.name, createdAt: newToken.createdAt }\n              ];\n              return { generating: false, newToken, newTokenName: '', tokens };\n            }, this.updateTokensCount);\n          }\n        },\n        () => {\n          if (this.mounted) {\n            this.setState({ generating: false });\n          }\n        }\n      );\n    }\n  };\n\n  handleRevokeToken = (revokedToken: T.UserToken) => {\n    this.setState(\n      state => ({\n        tokens: state.tokens.filter(token => token.name !== revokedToken.name)\n      }),\n      this.updateTokensCount\n    );\n  };\n\n  handleNewTokenChange = (evt: React.SyntheticEvent<HTMLInputElement>) =>\n    this.setState({ newTokenName: evt.currentTarget.value });\n\n  renderItems() {\n    const { tokens } = this.state;\n    if (tokens.length <= 0) {\n      return (\n        <tr>\n          <td className=\"note\" colSpan={3}>\n            {translate('users.no_tokens')}\n          </td>\n        </tr>\n      );\n    }\n    return tokens.map(token => (\n      <TokensFormItem\n        deleteConfirmation={this.props.deleteConfirmation}\n        key={token.name}\n        login={this.props.login}\n        onRevokeToken={this.handleRevokeToken}\n        token={token}\n      />\n    ));\n  }\n\n  render() {\n    const { generating, loading, newToken, newTokenName, tokens } = this.state;\n    const customSpinner = (\n      <tr>\n        <td>\n          <i className=\"spinner\" />\n        </td>\n      </tr>\n    );\n    return (\n      <>\n        <h3 className=\"spacer-bottom\">{translate('users.generate_tokens')}</h3>\n        <form\n          autoComplete=\"off\"\n          className=\"display-flex-center\"\n          id=\"generate-token-form\"\n          onSubmit={this.handleGenerateToken}>\n          <input\n            className=\"input-large spacer-right\"\n            maxLength={100}\n            onChange={this.handleNewTokenChange}\n            placeholder={translate('users.enter_token_name')}\n            required={true}\n            type=\"text\"\n            value={newTokenName}\n          />\n          <SubmitButton\n            className=\"js-generate-token\"\n            disabled={generating || newTokenName.length <= 0}>\n            {translate('users.generate')}\n          </SubmitButton>\n        </form>\n\n        {newToken && <TokensFormNewToken token={newToken} />}\n\n        <table className=\"data zebra big-spacer-top\">\n          <thead>\n            <tr>\n              <th>{translate('name')}</th>\n              <th>{translate('my_account.tokens_last_usage')}</th>\n              <th className=\"text-right\">{translate('created')}</th>\n              <th />\n            </tr>\n          </thead>\n          <tbody>\n            <DeferredSpinner customSpinner={customSpinner} loading={loading && tokens.length <= 0}>\n              {this.renderItems()}\n            </DeferredSpinner>\n          </tbody>\n        </table>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DeleteButton } from 'sonar-ui-common/components/controls/buttons';\n\nexport interface Props {\n  idx: number;\n  scmAccount: string;\n  onChange: (idx: number, scmAccount: string) => void;\n  onRemove: (idx: number) => void;\n}\n\nexport default class UserScmAccountInput extends React.PureComponent<Props> {\n  handleChange = (event: React.SyntheticEvent<HTMLInputElement>) =>\n    this.props.onChange(this.props.idx, event.currentTarget.value);\n\n  handleRemove = () => this.props.onRemove(this.props.idx);\n\n  render() {\n    return (\n      <div className=\"js-scm-account display-flex-row spacer-bottom\">\n        <input\n          maxLength={255}\n          onChange={this.handleChange}\n          type=\"text\"\n          value={this.props.scmAccount}\n        />\n        <DeleteButton onClick={this.handleRemove} />\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { uniq } from 'lodash';\nimport * as React from 'react';\nimport { Button, ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport SimpleModal from 'sonar-ui-common/components/controls/SimpleModal';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { parseError } from 'sonar-ui-common/helpers/request';\nimport { createUser, updateUser } from '../../../api/users';\nimport throwGlobalError from '../../../app/utils/throwGlobalError';\nimport UserScmAccountInput from './UserScmAccountInput';\n\nexport interface Props {\n  onClose: () => void;\n  onUpdateUsers: () => void;\n  user?: T.User;\n}\n\ninterface State {\n  email: string;\n  error?: string;\n  login: string;\n  name: string;\n  password: string;\n  scmAccounts: string[];\n}\n\nexport default class UserForm extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    const { user } = props;\n    if (user) {\n      this.state = {\n        email: user.email || '',\n        login: user.login,\n        name: user.name || '',\n        password: '',\n        scmAccounts: user.scmAccounts || []\n      };\n    } else {\n      this.state = {\n        email: '',\n        login: '',\n        name: '',\n        password: '',\n        scmAccounts: []\n      };\n    }\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleError = (response: Response) => {\n    if (!this.mounted || ![400, 500].includes(response.status)) {\n      return throwGlobalError(response);\n    } else {\n      return parseError(response).then(\n        errorMsg => this.setState({ error: errorMsg }),\n        throwGlobalError\n      );\n    }\n  };\n\n  handleEmailChange = (event: React.SyntheticEvent<HTMLInputElement>) =>\n    this.setState({ email: event.currentTarget.value });\n\n  handleLoginChange = (event: React.SyntheticEvent<HTMLInputElement>) =>\n    this.setState({ login: event.currentTarget.value });\n\n  handleNameChange = (event: React.SyntheticEvent<HTMLInputElement>) =>\n    this.setState({ name: event.currentTarget.value });\n\n  handlePasswordChange = (event: React.SyntheticEvent<HTMLInputElement>) =>\n    this.setState({ password: event.currentTarget.value });\n\n  handleCreateUser = () => {\n    return createUser({\n      email: this.state.email || undefined,\n      login: this.state.login,\n      name: this.state.name,\n      password: this.state.password,\n      scmAccount: uniq(this.state.scmAccounts)\n    }).then(() => {\n      this.props.onUpdateUsers();\n      this.props.onClose();\n    }, this.handleError);\n  };\n\n  handleUpdateUser = () => {\n    const { user } = this.props;\n    return updateUser({\n      email: user!.local ? this.state.email : undefined,\n      login: this.state.login,\n      name: user!.local ? this.state.name : undefined,\n      scmAccount: uniq(this.state.scmAccounts)\n    }).then(() => {\n      this.props.onUpdateUsers();\n      this.props.onClose();\n    }, this.handleError);\n  };\n\n  handleAddScmAccount = () => {\n    this.setState(({ scmAccounts }) => ({ scmAccounts: scmAccounts.concat('') }));\n  };\n\n  handleUpdateScmAccount = (idx: number, scmAccount: string) =>\n    this.setState(({ scmAccounts: oldScmAccounts }) => {\n      const scmAccounts = oldScmAccounts.slice();\n      scmAccounts[idx] = scmAccount;\n      return { scmAccounts };\n    });\n\n  handleRemoveScmAccount = (idx: number) =>\n    this.setState(({ scmAccounts }) => ({\n      scmAccounts: scmAccounts.slice(0, idx).concat(scmAccounts.slice(idx + 1))\n    }));\n\n  render() {\n    const { user } = this.props;\n    const { error } = this.state;\n\n    const header = user ? translate('users.update_user') : translate('users.create_user');\n    return (\n      <SimpleModal\n        header={header}\n        onClose={this.props.onClose}\n        onSubmit={user ? this.handleUpdateUser : this.handleCreateUser}\n        size=\"small\">\n        {({ onCloseClick, onFormSubmit, submitting }) => (\n          <form autoComplete=\"off\" id=\"user-form\" onSubmit={onFormSubmit}>\n            <header className=\"modal-head\">\n              <h2>{header}</h2>\n            </header>\n\n            <div className=\"modal-body modal-container\">\n              {error && <Alert variant=\"error\">{error}</Alert>}\n\n              {!error && user && !user.local && (\n                <Alert variant=\"warning\">{translate('users.cannot_update_delegated_user')}</Alert>\n              )}\n\n              {!user && (\n                <div className=\"modal-field\">\n                  <label htmlFor=\"create-user-login\">\n                    {translate('login')}\n                    <em className=\"mandatory\">*</em>\n                  </label>\n                  {/* keep this fake field to hack browser autofill */}\n                  <input className=\"hidden\" name=\"login-fake\" type=\"text\" />\n                  <input\n                    autoFocus={true}\n                    id=\"create-user-login\"\n                    maxLength={255}\n                    minLength={3}\n                    name=\"login\"\n                    onChange={this.handleLoginChange}\n                    required={true}\n                    type=\"text\"\n                    value={this.state.login}\n                  />\n                  <p className=\"note\">{translateWithParameters('users.minimum_x_characters', 3)}</p>\n                </div>\n              )}\n              <div className=\"modal-field\">\n                <label htmlFor=\"create-user-name\">\n                  {translate('name')}\n                  <em className=\"mandatory\">*</em>\n                </label>\n                {/* keep this fake field to hack browser autofill */}\n                <input className=\"hidden\" name=\"name-fake\" type=\"text\" />\n                <input\n                  autoFocus={!!user}\n                  disabled={user && !user.local}\n                  id=\"create-user-name\"\n                  maxLength={200}\n                  name=\"name\"\n                  onChange={this.handleNameChange}\n                  required={true}\n                  type=\"text\"\n                  value={this.state.name}\n                />\n              </div>\n              <div className=\"modal-field\">\n                <label htmlFor=\"create-user-email\">{translate('users.email')}</label>\n                {/* keep this fake field to hack browser autofill */}\n                <input className=\"hidden\" name=\"email-fake\" type=\"email\" />\n                <input\n                  disabled={user && !user.local}\n                  id=\"create-user-email\"\n                  maxLength={100}\n                  name=\"email\"\n                  onChange={this.handleEmailChange}\n                  type=\"email\"\n                  value={this.state.email}\n                />\n              </div>\n              {!user && (\n                <div className=\"modal-field\">\n                  <label htmlFor=\"create-user-password\">\n                    {translate('password')}\n                    <em className=\"mandatory\">*</em>\n                  </label>\n                  {/* keep this fake field to hack browser autofill */}\n                  <input className=\"hidden\" name=\"password-fake\" type=\"password\" />\n                  <input\n                    id=\"create-user-password\"\n                    maxLength={50}\n                    name=\"password\"\n                    onChange={this.handlePasswordChange}\n                    required={true}\n                    type=\"password\"\n                    value={this.state.password}\n                  />\n                </div>\n              )}\n              <div className=\"modal-field\">\n                <label>{translate('my_profile.scm_accounts')}</label>\n                {this.state.scmAccounts.map((scm, idx) => (\n                  <UserScmAccountInput\n                    idx={idx}\n                    key={idx}\n                    onChange={this.handleUpdateScmAccount}\n                    onRemove={this.handleRemoveScmAccount}\n                    scmAccount={scm}\n                  />\n                ))}\n                <div className=\"spacer-bottom\">\n                  <Button className=\"js-scm-account-add\" onClick={this.handleAddScmAccount}>\n                    {translate('add_verb')}\n                  </Button>\n                </div>\n                <p className=\"note\">{translate('user.login_or_email_used_as_scm_account')}</p>\n              </div>\n            </div>\n\n            <footer className=\"modal-foot\">\n              {submitting && <i className=\"spinner spacer-right\" />}\n              <SubmitButton disabled={submitting}>\n                {user ? translate('update_verb') : translate('create')}\n              </SubmitButton>\n              <ResetButtonLink onClick={onCloseClick}>{translate('cancel')}</ResetButtonLink>\n            </footer>\n          </form>\n        )}\n      </SimpleModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport UserForm from './components/UserForm';\n\ninterface Props {\n  loading: boolean;\n  onUpdateUsers: () => void;\n}\n\ninterface State {\n  openUserForm: boolean;\n}\n\nexport default class Header extends React.PureComponent<Props, State> {\n  state: State = { openUserForm: false };\n\n  handleOpenUserForm = () => {\n    this.setState({ openUserForm: true });\n  };\n\n  handleCloseUserForm = () => {\n    this.setState({ openUserForm: false });\n  };\n\n  render() {\n    return (\n      <header className=\"page-header\" id=\"users-header\">\n        <h1 className=\"page-title\">{translate('users.page')}</h1>\n        <DeferredSpinner loading={this.props.loading} />\n\n        <div className=\"page-actions\">\n          <Button id=\"users-create\" onClick={this.handleOpenUserForm}>\n            {translate('users.create_user')}\n          </Button>\n        </div>\n\n        <p className=\"page-description\">{translate('users.page.description')}</p>\n        {this.state.openUserForm && (\n          <UserForm onClose={this.handleCloseUserForm} onUpdateUsers={this.props.onUpdateUsers} />\n        )}\n      </header>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Query } from './utils';\n\ninterface Props {\n  query: Query;\n  updateQuery: (newQuery: Partial<Query>) => void;\n}\n\nexport default class Search extends React.PureComponent<Props> {\n  handleSearch = (search: string) => {\n    this.props.updateQuery({ search });\n  };\n\n  render() {\n    const { query } = this.props;\n\n    return (\n      <div className=\"panel panel-vertical bordered-bottom spacer-bottom\" id=\"users-search\">\n        <SearchBox\n          minLength={2}\n          onChange={this.handleSearch}\n          placeholder={translate('search.search_by_login_or_name')}\n          value={query.search}\n        />\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { ResetButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport TokensForm from './TokensForm';\n\ninterface Props {\n  user: T.User;\n  onClose: () => void;\n  updateTokensCount: (login: string, tokensCount: number) => void;\n}\n\nexport default function TokensFormModal(props: Props) {\n  return (\n    <Modal contentLabel={translate('users.tokens')} onRequestClose={props.onClose}>\n      <header className=\"modal-head\">\n        <h2>\n          <FormattedMessage\n            defaultMessage={translate('users.user_X_tokens')}\n            id=\"users.user_X_tokens\"\n            values={{ user: <em>{props.user.name}</em> }}\n          />\n        </h2>\n      </header>\n      <div className=\"modal-body modal-container\">\n        <TokensForm\n          deleteConfirmation=\"inline\"\n          login={props.user.login}\n          updateTokensCount={props.updateTokensCount}\n        />\n      </div>\n      <footer className=\"modal-foot\">\n        <ResetButtonLink onClick={props.onClose}>{translate('Done')}</ResetButtonLink>\n      </footer>\n    </Modal>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { deactivateUser } from '../../../api/users';\n\nexport interface Props {\n  onClose: () => void;\n  onUpdateUsers: () => void;\n  user: T.UserActive;\n}\n\ninterface State {\n  submitting: boolean;\n}\n\nexport default class DeactivateForm extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { submitting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleDeactivate = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.setState({ submitting: true });\n    deactivateUser({ login: this.props.user.login }).then(\n      () => {\n        this.props.onUpdateUsers();\n        this.props.onClose();\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ submitting: false });\n        }\n      }\n    );\n  };\n\n  render() {\n    const { user } = this.props;\n    const { submitting } = this.state;\n\n    const header = translate('users.deactivate_user');\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <form autoComplete=\"off\" id=\"deactivate-user-form\" onSubmit={this.handleDeactivate}>\n          <header className=\"modal-head\">\n            <h2>{header}</h2>\n          </header>\n          <div className=\"modal-body\">\n            {translateWithParameters('users.deactivate_user.confirmation', user.name, user.login)}\n          </div>\n          <footer className=\"modal-foot\">\n            {submitting && <i className=\"spinner spacer-right\" />}\n            <SubmitButton className=\"js-confirm button-red\" disabled={submitting}>\n              {translate('users.deactivate')}\n            </SubmitButton>\n            <ResetButtonLink className=\"js-modal-close\" onClick={this.props.onClose}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          </footer>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { parseError } from 'sonar-ui-common/helpers/request';\nimport { changePassword } from '../../../api/users';\nimport addGlobalSuccessMessage from '../../../app/utils/addGlobalSuccessMessage';\nimport throwGlobalError from '../../../app/utils/throwGlobalError';\n\ninterface Props {\n  isCurrentUser: boolean;\n  onClose: () => void;\n  user: T.User;\n}\n\ninterface State {\n  confirmPassword: string;\n  error?: string;\n  newPassword: string;\n  oldPassword: string;\n  submitting: boolean;\n}\n\nexport default class PasswordForm extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = {\n    confirmPassword: '',\n    newPassword: '',\n    oldPassword: '',\n    submitting: false\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleError = (response: Response) => {\n    if (!this.mounted || response.status !== 400) {\n      return throwGlobalError(response);\n    } else {\n      return parseError(response).then(\n        errorMsg => this.setState({ error: errorMsg, submitting: false }),\n        throwGlobalError\n      );\n    }\n  };\n\n  handleConfirmPasswordChange = (event: React.SyntheticEvent<HTMLInputElement>) =>\n    this.setState({ confirmPassword: event.currentTarget.value });\n\n  handleNewPasswordChange = (event: React.SyntheticEvent<HTMLInputElement>) =>\n    this.setState({ newPassword: event.currentTarget.value });\n\n  handleOldPasswordChange = (event: React.SyntheticEvent<HTMLInputElement>) =>\n    this.setState({ oldPassword: event.currentTarget.value });\n\n  handleChangePassword = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (\n      this.state.newPassword.length > 0 &&\n      this.state.newPassword === this.state.confirmPassword\n    ) {\n      this.setState({ submitting: true });\n      changePassword({\n        login: this.props.user.login,\n        password: this.state.newPassword,\n        previousPassword: this.state.oldPassword\n      }).then(() => {\n        addGlobalSuccessMessage(translate('my_profile.password.changed'));\n        this.props.onClose();\n      }, this.handleError);\n    }\n  };\n\n  render() {\n    const { error, submitting, newPassword, confirmPassword } = this.state;\n\n    const header = translate('my_profile.password.title');\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose} size=\"small\">\n        <form autoComplete=\"off\" id=\"user-password-form\" onSubmit={this.handleChangePassword}>\n          <header className=\"modal-head\">\n            <h2>{header}</h2>\n          </header>\n          <div className=\"modal-body\">\n            {error && <Alert variant=\"error\">{error}</Alert>}\n            {this.props.isCurrentUser && (\n              <div className=\"modal-field\">\n                <label htmlFor=\"old-user-password\">\n                  {translate('my_profile.password.old')}\n                  <em className=\"mandatory\">*</em>\n                </label>\n                {/* keep this fake field to hack browser autofill */}\n                <input className=\"hidden\" name=\"old-password-fake\" type=\"password\" />\n                <input\n                  id=\"old-user-password\"\n                  maxLength={50}\n                  name=\"old-password\"\n                  onChange={this.handleOldPasswordChange}\n                  required={true}\n                  type=\"password\"\n                  value={this.state.oldPassword}\n                />\n              </div>\n            )}\n            <div className=\"modal-field\">\n              <label htmlFor=\"user-password\">\n                {translate('my_profile.password.new')}\n                <em className=\"mandatory\">*</em>\n              </label>\n              {/* keep this fake field to hack browser autofill */}\n              <input className=\"hidden\" name=\"password-fake\" type=\"password\" />\n              <input\n                id=\"user-password\"\n                maxLength={50}\n                name=\"password\"\n                onChange={this.handleNewPasswordChange}\n                required={true}\n                type=\"password\"\n                value={this.state.newPassword}\n              />\n            </div>\n            <div className=\"modal-field\">\n              <label htmlFor=\"confirm-user-password\">\n                {translate('my_profile.password.confirm')}\n                <em className=\"mandatory\">*</em>\n              </label>\n              {/* keep this fake field to hack browser autofill */}\n              <input className=\"hidden\" name=\"confirm-password-fake\" type=\"password\" />\n              <input\n                id=\"confirm-user-password\"\n                maxLength={50}\n                name=\"confirm-password\"\n                onChange={this.handleConfirmPasswordChange}\n                required={true}\n                type=\"password\"\n                value={this.state.confirmPassword}\n              />\n            </div>\n          </div>\n          <footer className=\"modal-foot\">\n            {submitting && <i className=\"spinner spacer-right\" />}\n            <SubmitButton disabled={submitting || !newPassword || newPassword !== confirmPassword}>\n              {translate('change_verb')}\n            </SubmitButton>\n            <ResetButtonLink onClick={this.props.onClose}>{translate('cancel')}</ResetButtonLink>\n          </footer>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ActionsDropdown, {\n  ActionsDropdownDivider,\n  ActionsDropdownItem\n} from 'sonar-ui-common/components/controls/ActionsDropdown';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { isUserActive } from '../../../helpers/users';\nimport DeactivateForm from './DeactivateForm';\nimport PasswordForm from './PasswordForm';\nimport UserForm from './UserForm';\n\ninterface Props {\n  isCurrentUser: boolean;\n  onUpdateUsers: () => void;\n  user: T.User;\n}\n\ninterface State {\n  openForm?: string;\n}\n\nexport default class UserActions extends React.PureComponent<Props, State> {\n  state: State = {};\n\n  handleOpenDeactivateForm = () => {\n    this.setState({ openForm: 'deactivate' });\n  };\n\n  handleOpenPasswordForm = () => {\n    this.setState({ openForm: 'password' });\n  };\n\n  handleOpenUpdateForm = () => {\n    this.setState({ openForm: 'update' });\n  };\n\n  handleCloseForm = () => {\n    this.setState({ openForm: undefined });\n  };\n\n  renderActions = () => {\n    const { user } = this.props;\n    return (\n      <ActionsDropdown>\n        <ActionsDropdownItem className=\"js-user-update\" onClick={this.handleOpenUpdateForm}>\n          {translate('update_details')}\n        </ActionsDropdownItem>\n        {user.local && (\n          <ActionsDropdownItem\n            className=\"js-user-change-password\"\n            onClick={this.handleOpenPasswordForm}>\n            {translate('my_profile.password.title')}\n          </ActionsDropdownItem>\n        )}\n        <ActionsDropdownDivider />\n        {isUserActive(user) && (\n          <ActionsDropdownItem\n            className=\"js-user-deactivate\"\n            destructive={true}\n            onClick={this.handleOpenDeactivateForm}>\n            {translate('users.deactivate')}\n          </ActionsDropdownItem>\n        )}\n      </ActionsDropdown>\n    );\n  };\n\n  render() {\n    const { openForm } = this.state;\n    const { isCurrentUser, onUpdateUsers, user } = this.props;\n\n    return (\n      <>\n        {this.renderActions()}\n        {openForm === 'deactivate' && isUserActive(user) && (\n          <DeactivateForm\n            onClose={this.handleCloseForm}\n            onUpdateUsers={onUpdateUsers}\n            user={user}\n          />\n        )}\n        {openForm === 'password' && (\n          <PasswordForm isCurrentUser={isCurrentUser} onClose={this.handleCloseForm} user={user} />\n        )}\n        {openForm === 'update' && (\n          <UserForm onClose={this.handleCloseForm} onUpdateUsers={onUpdateUsers} user={user} />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { find, without } from 'lodash';\nimport * as React from 'react';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport SelectList, {\n  SelectListFilter,\n  SelectListSearchParams\n} from 'sonar-ui-common/components/controls/SelectList';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getUserGroups, UserGroup } from '../../../api/users';\nimport { addUserToGroup, removeUserFromGroup } from '../../../api/user_groups';\n\ninterface Props {\n  onClose: () => void;\n  onUpdateUsers: () => void;\n  user: T.User;\n}\n\ninterface State {\n  needToReload: boolean;\n  lastSearchParams?: SelectListSearchParams;\n  groups: UserGroup[];\n  groupsTotalCount?: number;\n  selectedGroups: string[];\n}\n\nexport default class GroupsForm extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      needToReload: false,\n      groups: [],\n      selectedGroups: []\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchUsers = (searchParams: SelectListSearchParams) =>\n    getUserGroups({\n      login: this.props.user.login,\n      organization: undefined,\n      p: searchParams.page,\n      ps: searchParams.pageSize,\n      q: searchParams.query !== '' ? searchParams.query : undefined,\n      selected: searchParams.filter\n    }).then(data => {\n      if (this.mounted) {\n        this.setState(prevState => {\n          const more = searchParams.page != null && searchParams.page > 1;\n\n          const groups = more ? [...prevState.groups, ...data.groups] : data.groups;\n          const newSeletedGroups = data.groups.filter(gp => gp.selected).map(gp => gp.name);\n          const selectedGroups = more\n            ? [...prevState.selectedGroups, ...newSeletedGroups]\n            : newSeletedGroups;\n\n          return {\n            lastSearchParams: searchParams,\n            needToReload: false,\n            groups,\n            groupsTotalCount: data.paging.total,\n            selectedGroups\n          };\n        });\n      }\n    });\n\n  handleSelect = (name: string) =>\n    addUserToGroup({\n      name,\n      login: this.props.user.login\n    }).then(() => {\n      if (this.mounted) {\n        this.setState((state: State) => ({\n          needToReload: true,\n          selectedGroups: [...state.selectedGroups, name]\n        }));\n      }\n    });\n\n  handleUnselect = (name: string) =>\n    removeUserFromGroup({\n      name,\n      login: this.props.user.login\n    }).then(() => {\n      if (this.mounted) {\n        this.setState((state: State) => ({\n          needToReload: true,\n          selectedGroups: without(state.selectedGroups, name)\n        }));\n      }\n    });\n\n  handleCloseClick = (event: React.SyntheticEvent<HTMLElement>) => {\n    event.preventDefault();\n    this.handleClose();\n  };\n\n  handleClose = () => {\n    this.props.onUpdateUsers();\n    this.props.onClose();\n  };\n\n  renderElement = (name: string): React.ReactNode => {\n    const group = find(this.state.groups, { name });\n    return (\n      <div className=\"select-list-list-item\">\n        {group === undefined ? (\n          name\n        ) : (\n          <>\n            {group.name}\n            <br />\n            <span className=\"note\">{group.description}</span>\n          </>\n        )}\n      </div>\n    );\n  };\n\n  render() {\n    const header = translate('users.update_groups');\n\n    return (\n      <Modal contentLabel={header} onRequestClose={this.handleClose}>\n        <div className=\"modal-head\">\n          <h2>{header}</h2>\n        </div>\n\n        <div className=\"modal-body modal-container\">\n          <SelectList\n            elements={this.state.groups.map(group => group.name)}\n            elementsTotalCount={this.state.groupsTotalCount}\n            needToReload={\n              this.state.needToReload &&\n              this.state.lastSearchParams &&\n              this.state.lastSearchParams.filter !== SelectListFilter.All\n            }\n            onSearch={this.fetchUsers}\n            onSelect={this.handleSelect}\n            onUnselect={this.handleUnselect}\n            renderElement={this.renderElement}\n            selectedElements={this.state.selectedGroups}\n            withPaging={true}\n          />\n        </div>\n\n        <footer className=\"modal-foot\">\n          <a className=\"js-modal-close\" href=\"#\" onClick={this.handleCloseClick}>\n            {translate('Done')}\n          </a>\n        </footer>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ButtonIcon } from 'sonar-ui-common/components/controls/buttons';\nimport BulletListIcon from 'sonar-ui-common/components/icons/BulletListIcon';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport GroupsForm from './GroupsForm';\n\ninterface Props {\n  groups: string[];\n  onUpdateUsers: () => void;\n  user: T.User;\n}\n\ninterface State {\n  openForm: boolean;\n  showMore: boolean;\n}\n\nconst GROUPS_LIMIT = 3;\n\nexport default class UserGroups extends React.PureComponent<Props, State> {\n  state: State = { openForm: false, showMore: false };\n\n  handleOpenForm = () => this.setState({ openForm: true });\n  handleCloseForm = () => this.setState({ openForm: false });\n\n  toggleShowMore = (evt: React.SyntheticEvent<HTMLAnchorElement>) => {\n    evt.preventDefault();\n    this.setState(state => ({ showMore: !state.showMore }));\n  };\n\n  render() {\n    const { groups } = this.props;\n    const limit = groups.length > GROUPS_LIMIT ? GROUPS_LIMIT - 1 : GROUPS_LIMIT;\n    return (\n      <ul>\n        {groups.slice(0, limit).map(group => (\n          <li className=\"little-spacer-bottom\" key={group}>\n            {group}\n          </li>\n        ))}\n        {groups.length > GROUPS_LIMIT &&\n          this.state.showMore &&\n          groups.slice(limit).map(group => (\n            <li className=\"little-spacer-bottom\" key={group}>\n              {group}\n            </li>\n          ))}\n        <li className=\"little-spacer-bottom\">\n          {groups.length > GROUPS_LIMIT && !this.state.showMore && (\n            <a className=\"js-user-more-groups spacer-right\" href=\"#\" onClick={this.toggleShowMore}>\n              {translateWithParameters('more_x', groups.length - limit)}\n            </a>\n          )}\n          <ButtonIcon\n            className=\"js-user-groups button-small\"\n            onClick={this.handleOpenForm}\n            tooltip={translate('users.update_groups')}>\n            <BulletListIcon />\n          </ButtonIcon>\n        </li>\n        {this.state.openForm && (\n          <GroupsForm\n            onClose={this.handleCloseForm}\n            onUpdateUsers={this.props.onUpdateUsers}\n            user={this.props.user}\n          />\n        )}\n      </ul>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { getTextColor } from 'sonar-ui-common/helpers/colors';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport { colors } from '../../../app/theme';\n\nexport interface Props {\n  identityProvider?: T.IdentityProvider;\n  user: T.User;\n}\n\nexport default function UserListItemIdentity({ identityProvider, user }: Props) {\n  return (\n    <td className=\"text-middle\">\n      <div>\n        <strong className=\"js-user-name\">{user.name}</strong>\n        <span className=\"js-user-login note little-spacer-left\">{user.login}</span>\n      </div>\n      {user.email && <div className=\"js-user-email little-spacer-top\">{user.email}</div>}\n      {!user.local && user.externalProvider !== 'sonarqube' && (\n        <ExternalProvider identityProvider={identityProvider} user={user} />\n      )}\n    </td>\n  );\n}\n\nexport function ExternalProvider({ identityProvider, user }: Props) {\n  if (!identityProvider) {\n    return (\n      <div className=\"js-user-identity-provider little-spacer-top\">\n        <span>\n          {user.externalProvider}: {user.externalIdentity}\n        </span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"js-user-identity-provider little-spacer-top\">\n      <div\n        className=\"identity-provider\"\n        style={{\n          backgroundColor: identityProvider.backgroundColor,\n          color: getTextColor(identityProvider.backgroundColor, colors.secondFontColor)\n        }}>\n        <img\n          alt={identityProvider.name}\n          className=\"little-spacer-right\"\n          height=\"14\"\n          src={getBaseUrl() + identityProvider.iconPath}\n          width=\"14\"\n        />\n        {user.externalIdentity}\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translateWithParameters } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  scmAccounts: string[];\n}\n\ninterface State {\n  showMore: boolean;\n}\n\nconst SCM_LIMIT = 3;\n\nexport default class UserScmAccounts extends React.PureComponent<Props, State> {\n  state: State = { showMore: false };\n\n  toggleShowMore = (evt: React.SyntheticEvent<HTMLAnchorElement>) => {\n    evt.preventDefault();\n    this.setState(state => ({ showMore: !state.showMore }));\n  };\n\n  render() {\n    const { scmAccounts } = this.props;\n    const limit = scmAccounts.length > SCM_LIMIT ? SCM_LIMIT - 1 : SCM_LIMIT;\n    return (\n      <ul className=\"js-scm-accounts\">\n        {scmAccounts.slice(0, limit).map((scmAccount, idx) => (\n          <li className=\"little-spacer-bottom\" key={idx}>\n            {scmAccount}\n          </li>\n        ))}\n        {scmAccounts.length > SCM_LIMIT &&\n          (this.state.showMore ? (\n            scmAccounts.slice(limit).map((scmAccount, idx) => (\n              <li className=\"little-spacer-bottom\" key={idx + limit}>\n                {scmAccount}\n              </li>\n            ))\n          ) : (\n            <li className=\"little-spacer-bottom\">\n              <a className=\"js-user-more-scm\" href=\"#\" onClick={this.toggleShowMore}>\n                {translateWithParameters('more_x', scmAccounts.length - limit)}\n              </a>\n            </li>\n          ))}\n      </ul>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ButtonIcon } from 'sonar-ui-common/components/controls/buttons';\nimport BulletListIcon from 'sonar-ui-common/components/icons/BulletListIcon';\nimport DateFromNowHourPrecision from 'sonar-ui-common/components/intl/DateFromNowHourPrecision';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport Avatar from '../../../components/ui/Avatar';\nimport TokensFormModal from './TokensFormModal';\nimport UserActions from './UserActions';\nimport UserGroups from './UserGroups';\nimport UserListItemIdentity from './UserListItemIdentity';\nimport UserScmAccounts from './UserScmAccounts';\n\ninterface Props {\n  identityProvider?: T.IdentityProvider;\n  isCurrentUser: boolean;\n  onUpdateUsers: () => void;\n  organizationsEnabled?: boolean;\n  updateTokensCount: (login: string, tokensCount: number) => void;\n  user: T.User;\n}\n\ninterface State {\n  openTokenForm: boolean;\n}\n\nexport default class UserListItem extends React.PureComponent<Props, State> {\n  state: State = { openTokenForm: false };\n\n  handleOpenTokensForm = () => this.setState({ openTokenForm: true });\n  handleCloseTokensForm = () => this.setState({ openTokenForm: false });\n\n  render() {\n    const { identityProvider, onUpdateUsers, organizationsEnabled, user } = this.props;\n\n    return (\n      <tr>\n        <td className=\"thin nowrap text-middle\">\n          <Avatar hash={user.avatar} name={user.name} size={36} />\n        </td>\n        <UserListItemIdentity identityProvider={identityProvider} user={user} />\n        <td className=\"thin nowrap text-middle\">\n          <UserScmAccounts scmAccounts={user.scmAccounts || []} />\n        </td>\n        <td className=\"thin nowrap text-middle\">\n          <DateFromNowHourPrecision date={user.lastConnectionDate} />\n        </td>\n        {!organizationsEnabled && (\n          <td className=\"thin nowrap text-middle\">\n            <UserGroups groups={user.groups || []} onUpdateUsers={onUpdateUsers} user={user} />\n          </td>\n        )}\n        <td className=\"thin nowrap text-middle\">\n          {user.tokensCount}\n          <ButtonIcon\n            className=\"js-user-tokens spacer-left button-small\"\n            onClick={this.handleOpenTokensForm}\n            tooltip={translate('users.update_tokens')}>\n            <BulletListIcon />\n          </ButtonIcon>\n        </td>\n        <td className=\"thin nowrap text-right text-middle\">\n          <UserActions\n            isCurrentUser={this.props.isCurrentUser}\n            onUpdateUsers={onUpdateUsers}\n            user={user}\n          />\n        </td>\n        {this.state.openTokenForm && (\n          <TokensFormModal\n            onClose={this.handleCloseTokensForm}\n            updateTokensCount={this.props.updateTokensCount}\n            user={user}\n          />\n        )}\n      </tr>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport UserListItem from './components/UserListItem';\n\ninterface Props {\n  currentUser: { isLoggedIn: boolean; login?: string };\n  identityProviders: T.IdentityProvider[];\n  onUpdateUsers: () => void;\n  organizationsEnabled?: boolean;\n  updateTokensCount: (login: string, tokensCount: number) => void;\n  users: T.User[];\n}\n\nexport default function UsersList({\n  currentUser,\n  identityProviders,\n  onUpdateUsers,\n  organizationsEnabled,\n  updateTokensCount,\n  users\n}: Props) {\n  return (\n    <div className=\"boxed-group boxed-group-inner\">\n      <table className=\"data zebra\" id=\"users-list\">\n        <thead>\n          <tr>\n            <th />\n            <th className=\"nowrap\" />\n            <th className=\"nowrap\">{translate('my_profile.scm_accounts')}</th>\n            <th className=\"nowrap\">{translate('users.last_connection')}</th>\n            {!organizationsEnabled && <th className=\"nowrap\">{translate('my_profile.groups')}</th>}\n            <th className=\"nowrap\">{translate('users.tokens')}</th>\n            <th className=\"nowrap\">&nbsp;</th>\n          </tr>\n        </thead>\n        <tbody>\n          {users.map(user => (\n            <UserListItem\n              identityProvider={identityProviders.find(\n                provider => user.externalProvider === provider.key\n              )}\n              isCurrentUser={currentUser.isLoggedIn && currentUser.login === user.login}\n              key={user.login}\n              onUpdateUsers={onUpdateUsers}\n              organizationsEnabled={organizationsEnabled}\n              updateTokensCount={updateTokensCount}\n              user={user}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { memoize } from 'lodash';\nimport { cleanQuery, parseAsString, serializeString } from 'sonar-ui-common/helpers/query';\n\nexport interface Query {\n  search: string;\n}\n\nexport const parseQuery = memoize(\n  (urlQuery: T.RawQuery): Query => ({\n    search: parseAsString(urlQuery['search'])\n  })\n);\n\nexport const serializeQuery = memoize(\n  (query: Query): T.RawQuery =>\n    cleanQuery({\n      search: query.search ? serializeString(query.search) : undefined\n    })\n);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport ListFooter from 'sonar-ui-common/components/controls/ListFooter';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getIdentityProviders, searchUsers } from '../../api/users';\nimport Suggestions from '../../app/components/embed-docs-modal/Suggestions';\nimport { Location, Router, withRouter } from '../../components/hoc/withRouter';\nimport Header from './Header';\nimport Search from './Search';\nimport UsersList from './UsersList';\nimport { parseQuery, Query, serializeQuery } from './utils';\n\ninterface Props {\n  currentUser: { isLoggedIn: boolean; login?: string };\n  location: Pick<Location, 'query'>;\n  organizationsEnabled?: boolean;\n  router: Pick<Router, 'push'>;\n}\n\ninterface State {\n  identityProviders: T.IdentityProvider[];\n  loading: boolean;\n  paging?: T.Paging;\n  users: T.User[];\n}\n\nexport class UsersApp extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { identityProviders: [], loading: true, users: [] };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchIdentityProviders();\n    this.fetchUsers();\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.location.query.search !== this.props.location.query.search) {\n      this.fetchUsers(nextProps);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  finishLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  fetchIdentityProviders = () =>\n    getIdentityProviders().then(\n      ({ identityProviders }) => {\n        if (this.mounted) {\n          this.setState({ identityProviders });\n        }\n      },\n      () => {}\n    );\n\n  fetchUsers = ({ location } = this.props) => {\n    this.setState({ loading: true });\n    searchUsers({ q: parseQuery(location.query).search }).then(({ paging, users }) => {\n      if (this.mounted) {\n        this.setState({ loading: false, paging, users });\n      }\n    }, this.finishLoading);\n  };\n\n  fetchMoreUsers = () => {\n    const { paging } = this.state;\n    if (paging) {\n      this.setState({ loading: true });\n      searchUsers({\n        p: paging.pageIndex + 1,\n        q: parseQuery(this.props.location.query).search\n      }).then(({ paging, users }) => {\n        if (this.mounted) {\n          this.setState(state => ({ loading: false, users: [...state.users, ...users], paging }));\n        }\n      }, this.finishLoading);\n    }\n  };\n\n  updateQuery = (newQuery: Partial<Query>) => {\n    const query = serializeQuery({ ...parseQuery(this.props.location.query), ...newQuery });\n    this.props.router.push({ ...this.props.location, query });\n  };\n\n  updateTokensCount = (login: string, tokensCount: number) => {\n    this.setState(state => ({\n      users: state.users.map(user => (user.login === login ? { ...user, tokensCount } : user))\n    }));\n  };\n\n  render() {\n    const query = parseQuery(this.props.location.query);\n    const { loading, paging, users } = this.state;\n    return (\n      <div className=\"page page-limited\" id=\"users-page\">\n        <Suggestions suggestions=\"users\" />\n        <Helmet defer={false} title={translate('users.page')} />\n        <Header loading={loading} onUpdateUsers={this.fetchUsers} />\n        <Search query={query} updateQuery={this.updateQuery} />\n        <UsersList\n          currentUser={this.props.currentUser}\n          identityProviders={this.state.identityProviders}\n          onUpdateUsers={this.fetchUsers}\n          organizationsEnabled={this.props.organizationsEnabled}\n          updateTokensCount={this.updateTokensCount}\n          users={users}\n        />\n        {paging !== undefined && (\n          <ListFooter\n            count={users.length}\n            loadMore={this.fetchMoreUsers}\n            ready={!loading}\n            total={paging.total}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(UsersApp);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { connect } from 'react-redux';\nimport { areThereCustomOrganizations, getCurrentUser, Store } from '../../store/rootReducer';\nimport UsersApp from './UsersApp';\n\nconst mapStateToProps = (state: Store) => ({\n  currentUser: getCurrentUser(state),\n  organizationsEnabled: areThereCustomOrganizations(state)\n});\n\nexport default connect(mapStateToProps)(UsersApp);\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as globalMessages from '../../store/globalMessages';\nimport getStore from './getStore';\n\nexport default function addGlobalSuccessMessage(message: string): void {\n  const store = getStore();\n  store.dispatch(globalMessages.addGlobalSuccessMessage(message));\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\n/** List tokens for given user login */\nexport function getTokens(login: string): Promise<T.UserToken[]> {\n  return getJSON('/api/user_tokens/search', { login }).then(r => r.userTokens, throwGlobalError);\n}\n\nexport function generateToken(data: { name: string; login?: string }): Promise<T.NewUserToken> {\n  return postJSON('/api/user_tokens/generate', data).catch(throwGlobalError);\n}\n\nexport function revokeToken(data: { name: string; login?: string }) {\n  return post('/api/user_tokens/revoke', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function searchUsersGroups(data: {\n  f?: string;\n  organization?: string;\n  p?: number;\n  ps?: number;\n  q?: string;\n}): Promise<{ groups: T.Group[]; paging: T.Paging }> {\n  return getJSON('/api/user_groups/search', data).catch(throwGlobalError);\n}\n\nexport function getUsersInGroup(data: {\n  id?: number;\n  name?: string;\n  organization?: string;\n  p?: number;\n  ps?: number;\n  q?: string;\n  selected?: string;\n}): Promise<T.Paging & { users: T.UserSelected[] }> {\n  return getJSON('/api/user_groups/users', data).catch(throwGlobalError);\n}\n\nexport function addUserToGroup(data: {\n  id?: string;\n  name?: string;\n  login?: string;\n  organization?: string;\n}) {\n  return post('/api/user_groups/add_user', data).catch(throwGlobalError);\n}\n\nexport function removeUserFromGroup(data: {\n  id?: string;\n  name?: string;\n  login?: string;\n  organization?: string;\n}) {\n  return post('/api/user_groups/remove_user', data).catch(throwGlobalError);\n}\n\nexport function createGroup(data: {\n  description?: string;\n  organization: string | undefined;\n  name: string;\n}): Promise<T.Group> {\n  return postJSON('/api/user_groups/create', data).then(r => r.group, throwGlobalError);\n}\n\nexport function updateGroup(data: { description?: string; id: number; name?: string }) {\n  return post('/api/user_groups/update', data).catch(throwGlobalError);\n}\n\nexport function deleteGroup(data: { name: string; organization: string | undefined }) {\n  return post('/api/user_groups/delete', data).catch(throwGlobalError);\n}\n"],"sourceRoot":""}