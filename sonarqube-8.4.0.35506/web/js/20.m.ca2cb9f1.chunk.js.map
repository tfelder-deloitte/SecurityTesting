{"version":3,"sources":["webpack:///./src/main/js/apps/groups/components/Form.tsx","webpack:///./src/main/js/apps/groups/components/Header.tsx","webpack:///./src/main/js/apps/groups/components/DeleteForm.tsx","webpack:///./src/main/js/apps/groups/components/EditMembersModal.tsx","webpack:///./src/main/js/apps/groups/components/EditMembers.tsx","webpack:///./src/main/js/apps/groups/components/ListItem.tsx","webpack:///./src/main/js/apps/groups/components/List.tsx","webpack:///./src/main/js/apps/groups/components/App.tsx","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./src/main/js/api/user_groups.ts"],"names":["props","super","handleSubmit","this","onSubmit","description","state","name","then","onClose","handleDescriptionChange","event","setState","currentTarget","value","handleNameChange","group","header","size","onCloseClick","onFormSubmit","submitting","className","htmlFor","autoFocus","id","maxLength","onChange","required","type","loading","disabled","confirmButtonText","onClick","mounted","createModal","handleCreateClick","handleClose","data","onCreate","DeleteForm","fetchUsers","searchParams","organization","p","page","ps","pageSize","q","query","undefined","selected","filter","prevState","more","users","newSelectedUsers","user","map","login","selectedUsers","needToReload","lastSearchParams","usersTotalCount","total","handleSelect","handleUnselect","renderElement","modalHeader","contentLabel","onRequestClose","elements","elementsTotalCount","SelectList","All","onSearch","onSelect","onUnselect","selectedElements","withPaging","modal","handleMembersClick","handleModalClose","onEdit","deleteForm","editForm","handleDeleteClick","handleEditClick","closeDeleteForm","closeEditForm","handleDeleteFormSubmit","onDelete","handleEditFormSubmit","default","membersCount","onEditMembers","ActionsDropdown","destructive","List","showAnyone","key","colSpan","groups","toLowerCase","makeFetchGroupsRequest","stopLoading","fetchGroups","paging","fetchMoreGroups","pageIndex","existingGroups","search","refresh","handleCreate","handleDelete","handleEdit","includes","Suggestions","suggestions","defer","title","minLength","placeholder","count","length","loadMore","ready","Consumer","addSuggestions","removeSuggestions","SuggestionsInner","prevProps","searchUsersGroups","catch","getUsersInGroup","addUserToGroup","removeUserFromGroup","createGroup","r","updateGroup","deleteGroup"],"mappings":"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","file":"js/20.m.ca2cb9f1.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport SimpleModal from 'sonar-ui-common/components/controls/SimpleModal';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  confirmButtonText: string;\n  group?: T.Group;\n  header: string;\n  onClose: () => void;\n  onSubmit: (data: { description: string; name: string }) => Promise<void>;\n}\n\ninterface State {\n  description: string;\n  name: string;\n}\n\nexport default class Form extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      description: (props.group && props.group.description) || '',\n      name: (props.group && props.group.name) || ''\n    };\n  }\n\n  handleSubmit = () => {\n    return this.props\n      .onSubmit({ description: this.state.description, name: this.state.name })\n      .then(this.props.onClose);\n  };\n\n  handleDescriptionChange = (event: React.SyntheticEvent<HTMLTextAreaElement>) => {\n    this.setState({ description: event.currentTarget.value });\n  };\n\n  handleNameChange = (event: React.SyntheticEvent<HTMLInputElement>) => {\n    this.setState({ name: event.currentTarget.value });\n  };\n\n  render() {\n    return (\n      <SimpleModal\n        header={this.props.header}\n        onClose={this.props.onClose}\n        onSubmit={this.handleSubmit}\n        size=\"small\">\n        {({ onCloseClick, onFormSubmit, submitting }) => (\n          <form onSubmit={onFormSubmit}>\n            <header className=\"modal-head\">\n              <h2>{this.props.header}</h2>\n            </header>\n\n            <div className=\"modal-body\">\n              <div className=\"modal-field\">\n                <label htmlFor=\"create-group-name\">\n                  {translate('name')}\n                  <em className=\"mandatory\">*</em>\n                </label>\n                <input\n                  autoFocus={true}\n                  id=\"create-group-name\"\n                  maxLength={255}\n                  name=\"name\"\n                  onChange={this.handleNameChange}\n                  required={true}\n                  size={50}\n                  type=\"text\"\n                  value={this.state.name}\n                />\n              </div>\n              <div className=\"modal-field\">\n                <label htmlFor=\"create-group-description\">{translate('description')}</label>\n                <textarea\n                  id=\"create-group-description\"\n                  name=\"description\"\n                  onChange={this.handleDescriptionChange}\n                  value={this.state.description}\n                />\n              </div>\n            </div>\n\n            <footer className=\"modal-foot\">\n              <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n              <SubmitButton disabled={submitting}>{this.props.confirmButtonText}</SubmitButton>\n              <ResetButtonLink onClick={onCloseClick}>{translate('cancel')}</ResetButtonLink>\n            </footer>\n          </form>\n        )}\n      </SimpleModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport Form from './Form';\n\ninterface Props {\n  loading: boolean;\n  onCreate: (data: { description: string; name: string }) => Promise<void>;\n}\n\ninterface State {\n  createModal: boolean;\n}\n\nexport default class Header extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { createModal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleCreateClick = () => {\n    this.setState({ createModal: true });\n  };\n\n  handleClose = () => {\n    if (this.mounted) {\n      this.setState({ createModal: false });\n    }\n  };\n\n  handleSubmit = (data: { name: string; description: string }) => {\n    return this.props.onCreate(data);\n  };\n\n  render() {\n    return (\n      <>\n        <header className=\"page-header\" id=\"groups-header\">\n          <h1 className=\"page-title\">{translate('user_groups.page')}</h1>\n\n          <DeferredSpinner loading={this.props.loading} />\n\n          <div className=\"page-actions\">\n            <Button id=\"groups-create\" onClick={this.handleCreateClick}>\n              {translate('groups.create_group')}\n            </Button>\n          </div>\n\n          <p className=\"page-description\">{translate('user_groups.page.description')}</p>\n        </header>\n        {this.state.createModal && (\n          <Form\n            confirmButtonText={translate('create')}\n            header={translate('groups.create_group')}\n            onClose={this.handleClose}\n            onSubmit={this.handleSubmit}\n          />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport SimpleModal from 'sonar-ui-common/components/controls/SimpleModal';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  group: T.Group;\n  onClose: () => void;\n  onSubmit: () => Promise<void>;\n}\n\nexport default function DeleteForm({ group, onClose, onSubmit }: Props) {\n  const header = translate('groups.delete_group');\n\n  return (\n    <SimpleModal header={header} onClose={onClose} onSubmit={onSubmit}>\n      {({ onCloseClick, onFormSubmit, submitting }) => (\n        <form onSubmit={onFormSubmit}>\n          <header className=\"modal-head\">\n            <h2>{header}</h2>\n          </header>\n\n          <div className=\"modal-body\">\n            {translateWithParameters('groups.delete_group.confirmation', group.name)}\n          </div>\n\n          <footer className=\"modal-foot\">\n            <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n            <SubmitButton className=\"button-red\" disabled={submitting}>\n              {translate('delete')}\n            </SubmitButton>\n            <ResetButtonLink disabled={submitting} onClick={onCloseClick}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          </footer>\n        </form>\n      )}\n    </SimpleModal>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { find, without } from 'lodash';\nimport * as React from 'react';\nimport { ResetButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport SelectList, {\n  SelectListFilter,\n  SelectListSearchParams\n} from 'sonar-ui-common/components/controls/SelectList';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { addUserToGroup, getUsersInGroup, removeUserFromGroup } from '../../../api/user_groups';\n\ninterface Props {\n  group: T.Group;\n  onClose: () => void;\n  organization: string | undefined;\n}\n\ninterface State {\n  lastSearchParams?: SelectListSearchParams;\n  needToReload: boolean;\n  users: T.UserSelected[];\n  usersTotalCount?: number;\n  selectedUsers: string[];\n}\n\nexport default class EditMembersModal extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      needToReload: false,\n      users: [],\n      selectedUsers: []\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchUsers = (searchParams: SelectListSearchParams) =>\n    getUsersInGroup({\n      name: this.props.group.name,\n      organization: this.props.organization,\n      p: searchParams.page,\n      ps: searchParams.pageSize,\n      q: searchParams.query !== '' ? searchParams.query : undefined,\n      selected: searchParams.filter\n    }).then(data => {\n      if (this.mounted) {\n        this.setState(prevState => {\n          const more = searchParams.page != null && searchParams.page > 1;\n\n          const users = more ? [...prevState.users, ...data.users] : data.users;\n          const newSelectedUsers = data.users.filter(user => user.selected).map(user => user.login);\n          const selectedUsers = more\n            ? [...prevState.selectedUsers, ...newSelectedUsers]\n            : newSelectedUsers;\n\n          return {\n            needToReload: false,\n            lastSearchParams: searchParams,\n            loading: false,\n            users,\n            usersTotalCount: data.total,\n            selectedUsers\n          };\n        });\n      }\n    });\n\n  handleSelect = (login: string) =>\n    addUserToGroup({\n      name: this.props.group.name,\n      login,\n      organization: this.props.organization\n    }).then(() => {\n      if (this.mounted) {\n        this.setState((state: State) => ({\n          needToReload: true,\n          selectedUsers: [...state.selectedUsers, login]\n        }));\n      }\n    });\n\n  handleUnselect = (login: string) =>\n    removeUserFromGroup({\n      name: this.props.group.name,\n      login,\n      organization: this.props.organization\n    }).then(() => {\n      if (this.mounted) {\n        this.setState((state: State) => ({\n          needToReload: true,\n          selectedUsers: without(state.selectedUsers, login)\n        }));\n      }\n    });\n\n  renderElement = (login: string): React.ReactNode => {\n    const user = find(this.state.users, { login });\n    return (\n      <div className=\"select-list-list-item\">\n        {user === undefined ? (\n          login\n        ) : (\n          <>\n            {user.name}\n            <br />\n            <span className=\"note\">{user.login}</span>\n          </>\n        )}\n      </div>\n    );\n  };\n\n  render() {\n    const modalHeader = translate('users.update');\n    return (\n      <Modal contentLabel={modalHeader} onRequestClose={this.props.onClose}>\n        <header className=\"modal-head\">\n          <h2>{modalHeader}</h2>\n        </header>\n\n        <div className=\"modal-body modal-container\">\n          <SelectList\n            elements={this.state.users.map(user => user.login)}\n            elementsTotalCount={this.state.usersTotalCount}\n            needToReload={\n              this.state.needToReload &&\n              this.state.lastSearchParams &&\n              this.state.lastSearchParams.filter !== SelectListFilter.All\n            }\n            onSearch={this.fetchUsers}\n            onSelect={this.handleSelect}\n            onUnselect={this.handleUnselect}\n            renderElement={this.renderElement}\n            selectedElements={this.state.selectedUsers}\n            withPaging={true}\n          />\n        </div>\n\n        <footer className=\"modal-foot\">\n          <ResetButtonLink onClick={this.props.onClose}>{translate('Done')}</ResetButtonLink>\n        </footer>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ButtonIcon } from 'sonar-ui-common/components/controls/buttons';\nimport BulletListIcon from 'sonar-ui-common/components/icons/BulletListIcon';\nimport EditMembersModal from './EditMembersModal';\n\ninterface Props {\n  group: T.Group;\n  onEdit: () => void;\n  organization: string | undefined;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class EditMembers extends React.PureComponent<Props, State> {\n  container?: HTMLElement | null;\n  mounted = false;\n  state: State = { modal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleMembersClick = () => {\n    this.setState({ modal: true });\n  };\n\n  handleModalClose = () => {\n    if (this.mounted) {\n      this.setState({ modal: false });\n      this.props.onEdit();\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <ButtonIcon className=\"button-small\" onClick={this.handleMembersClick}>\n          <BulletListIcon />\n        </ButtonIcon>\n        {this.state.modal && (\n          <EditMembersModal\n            group={this.props.group}\n            onClose={this.handleModalClose}\n            organization={this.props.organization}\n          />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ActionsDropdown, {\n  ActionsDropdownDivider,\n  ActionsDropdownItem\n} from 'sonar-ui-common/components/controls/ActionsDropdown';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { omitNil } from 'sonar-ui-common/helpers/request';\nimport DeleteForm from './DeleteForm';\nimport EditMembers from './EditMembers';\nimport Form from './Form';\n\ninterface Props {\n  group: T.Group;\n  onDelete: (name: string) => Promise<void>;\n  onEdit: (data: { description?: string; id: number; name?: string }) => Promise<void>;\n  onEditMembers: () => void;\n  organization: string | undefined;\n}\n\ninterface State {\n  deleteForm: boolean;\n  editForm: boolean;\n}\n\nexport default class ListItem extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { deleteForm: false, editForm: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleDeleteClick = () => {\n    this.setState({ deleteForm: true });\n  };\n\n  handleEditClick = () => {\n    this.setState({ editForm: true });\n  };\n\n  closeDeleteForm = () => {\n    if (this.mounted) {\n      this.setState({ deleteForm: false });\n    }\n  };\n\n  closeEditForm = () => {\n    if (this.mounted) {\n      this.setState({ editForm: false });\n    }\n  };\n\n  handleDeleteFormSubmit = () => {\n    return this.props.onDelete(this.props.group.name);\n  };\n\n  handleEditFormSubmit = ({ name, description }: { name: string; description: string }) => {\n    const { group } = this.props;\n    return this.props.onEdit({\n      description,\n      id: group.id,\n      // pass `name` only if it has changed, otherwise the WS fails\n      ...omitNil({ name: name !== group.name ? name : undefined })\n    });\n  };\n\n  render() {\n    const { group } = this.props;\n\n    return (\n      <tr data-id={group.id}>\n        <td className=\" width-20\">\n          <strong className=\"js-group-name\">{group.name}</strong>\n          {group.default && <span className=\"little-spacer-left\">({translate('default')})</span>}\n        </td>\n\n        <td className=\"width-10\">\n          <div className=\"display-flex-center\">\n            <span className=\"spacer-right\">{group.membersCount}</span>\n            {!group.default && (\n              <EditMembers\n                group={group}\n                onEdit={this.props.onEditMembers}\n                organization={this.props.organization}\n              />\n            )}\n          </div>\n        </td>\n\n        <td className=\"width-40\">\n          <span className=\"js-group-description\">{group.description}</span>\n        </td>\n\n        <td className=\"thin nowrap text-right\">\n          {!group.default && (\n            <ActionsDropdown>\n              <ActionsDropdownItem className=\"js-group-update\" onClick={this.handleEditClick}>\n                {translate('update_details')}\n              </ActionsDropdownItem>\n              <ActionsDropdownDivider />\n              <ActionsDropdownItem\n                className=\"js-group-delete\"\n                destructive={true}\n                onClick={this.handleDeleteClick}>\n                {translate('delete')}\n              </ActionsDropdownItem>\n            </ActionsDropdown>\n          )}\n        </td>\n\n        {this.state.deleteForm && (\n          <DeleteForm\n            group={group}\n            onClose={this.closeDeleteForm}\n            onSubmit={this.handleDeleteFormSubmit}\n          />\n        )}\n\n        {this.state.editForm && (\n          <Form\n            confirmButtonText={translate('update_verb')}\n            group={group}\n            header={translate('groups.update_group')}\n            onClose={this.closeEditForm}\n            onSubmit={this.handleEditFormSubmit}\n          />\n        )}\n      </tr>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport ListItem from './ListItem';\n\ninterface Props {\n  groups: T.Group[];\n  onDelete: (name: string) => Promise<void>;\n  onEdit: (data: { description?: string; id: number; name?: string }) => Promise<void>;\n  onEditMembers: () => void;\n  organization: string | undefined;\n  showAnyone: boolean;\n}\n\nexport default function List(props: Props) {\n  return (\n    <div className=\"boxed-group boxed-group-inner\">\n      <table className=\"data zebra zebra-hover\" id=\"groups-list\">\n        <thead>\n          <tr>\n            <th />\n            <th className=\"nowrap\">{translate('members')}</th>\n            <th className=\"nowrap\">{translate('description')}</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>\n          {props.showAnyone && (\n            <tr className=\"js-anyone\" key=\"anyone\">\n              <td className=\"width-20\">\n                <strong className=\"js-group-name\">{translate('groups.anyone')}</strong>\n              </td>\n              <td className=\"width-10\" />\n              <td className=\"width-40\" colSpan={2}>\n                <span className=\"js-group-description\">\n                  {translate('user_groups.anyone.description')}\n                </span>\n              </td>\n            </tr>\n          )}\n\n          {sortBy(props.groups, group => group.name.toLowerCase()).map(group => (\n            <ListItem\n              group={group}\n              key={group.id}\n              onDelete={props.onDelete}\n              onEdit={props.onEdit}\n              onEditMembers={props.onEditMembers}\n              organization={props.organization}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport ListFooter from 'sonar-ui-common/components/controls/ListFooter';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { createGroup, deleteGroup, searchUsersGroups, updateGroup } from '../../../api/user_groups';\nimport Suggestions from '../../../app/components/embed-docs-modal/Suggestions';\nimport Header from './Header';\nimport List from './List';\n\ninterface Props {\n  organization?: Pick<T.Organization, 'key'>;\n}\n\ninterface State {\n  groups?: T.Group[];\n  loading: boolean;\n  paging?: T.Paging;\n  query: string;\n}\n\nexport default class App extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: true, query: '' };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchGroups();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  get organization() {\n    return this.props.organization && this.props.organization.key;\n  }\n\n  makeFetchGroupsRequest = (data?: { p?: number; q?: string }) => {\n    this.setState({ loading: true });\n    return searchUsersGroups({\n      organization: this.organization,\n      q: this.state.query,\n      ...data\n    });\n  };\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  fetchGroups = (data?: { p?: number; q?: string }) => {\n    this.makeFetchGroupsRequest(data).then(({ groups, paging }) => {\n      if (this.mounted) {\n        this.setState({ groups, loading: false, paging });\n      }\n    }, this.stopLoading);\n  };\n\n  fetchMoreGroups = () => {\n    const { paging } = this.state;\n    if (paging && paging.total > paging.pageIndex * paging.pageSize) {\n      this.makeFetchGroupsRequest({ p: paging.pageIndex + 1 }).then(({ groups, paging }) => {\n        if (this.mounted) {\n          this.setState(({ groups: existingGroups = [] }) => ({\n            groups: [...existingGroups, ...groups],\n            loading: false,\n            paging\n          }));\n        }\n      }, this.stopLoading);\n    }\n  };\n\n  search = (query: string) => {\n    this.fetchGroups({ q: query });\n    this.setState({ query });\n  };\n\n  refresh = () => {\n    this.fetchGroups({ q: this.state.query });\n  };\n\n  handleCreate = (data: { description: string; name: string }) => {\n    return createGroup({ ...data, organization: this.organization }).then(group => {\n      if (this.mounted) {\n        this.setState(({ groups = [] }: State) => ({\n          groups: [...groups, group]\n        }));\n      }\n    });\n  };\n\n  handleDelete = (name: string) => {\n    return deleteGroup({ name, organization: this.organization }).then(() => {\n      if (this.mounted) {\n        this.setState(({ groups = [] }: State) => ({\n          groups: groups.filter(group => group.name !== name)\n        }));\n      }\n    });\n  };\n\n  handleEdit = (data: { description?: string; id: number; name?: string }) => {\n    return updateGroup(data).then(() => {\n      if (this.mounted) {\n        this.setState(({ groups = [] }: State) => ({\n          groups: groups.map(group => (group.id === data.id ? { ...group, ...data } : group))\n        }));\n      }\n    });\n  };\n\n  render() {\n    const { groups, loading, paging, query } = this.state;\n\n    const showAnyone =\n      this.props.organization === undefined && 'anyone'.includes(query.toLowerCase());\n\n    return (\n      <>\n        <Suggestions suggestions=\"user_groups\" />\n        <Helmet defer={false} title={translate('user_groups.page')} />\n        <div className=\"page page-limited\" id=\"groups-page\">\n          <Header loading={loading} onCreate={this.handleCreate} />\n\n          <SearchBox\n            className=\"big-spacer-bottom\"\n            id=\"groups-search\"\n            minLength={2}\n            onChange={this.search}\n            placeholder={translate('search.search_by_name')}\n            value={query}\n          />\n\n          {groups !== undefined && (\n            <List\n              groups={groups}\n              onDelete={this.handleDelete}\n              onEdit={this.handleEdit}\n              onEditMembers={this.refresh}\n              organization={this.organization}\n              showAnyone={showAnyone}\n            />\n          )}\n\n          {groups !== undefined && paging !== undefined && (\n            <div id=\"groups-list-footer\">\n              <ListFooter\n                count={showAnyone ? groups.length + 1 : groups.length}\n                loadMore={this.fetchMoreGroups}\n                ready={!loading}\n                total={showAnyone ? paging.total + 1 : paging.total}\n              />\n            </div>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function searchUsersGroups(data: {\n  f?: string;\n  organization?: string;\n  p?: number;\n  ps?: number;\n  q?: string;\n}): Promise<{ groups: T.Group[]; paging: T.Paging }> {\n  return getJSON('/api/user_groups/search', data).catch(throwGlobalError);\n}\n\nexport function getUsersInGroup(data: {\n  id?: number;\n  name?: string;\n  organization?: string;\n  p?: number;\n  ps?: number;\n  q?: string;\n  selected?: string;\n}): Promise<T.Paging & { users: T.UserSelected[] }> {\n  return getJSON('/api/user_groups/users', data).catch(throwGlobalError);\n}\n\nexport function addUserToGroup(data: {\n  id?: string;\n  name?: string;\n  login?: string;\n  organization?: string;\n}) {\n  return post('/api/user_groups/add_user', data).catch(throwGlobalError);\n}\n\nexport function removeUserFromGroup(data: {\n  id?: string;\n  name?: string;\n  login?: string;\n  organization?: string;\n}) {\n  return post('/api/user_groups/remove_user', data).catch(throwGlobalError);\n}\n\nexport function createGroup(data: {\n  description?: string;\n  organization: string | undefined;\n  name: string;\n}): Promise<T.Group> {\n  return postJSON('/api/user_groups/create', data).then(r => r.group, throwGlobalError);\n}\n\nexport function updateGroup(data: { description?: string; id: number; name?: string }) {\n  return post('/api/user_groups/update', data).catch(throwGlobalError);\n}\n\nexport function deleteGroup(data: { name: string; organization: string | undefined }) {\n  return post('/api/user_groups/delete', data).catch(throwGlobalError);\n}\n"],"sourceRoot":""}