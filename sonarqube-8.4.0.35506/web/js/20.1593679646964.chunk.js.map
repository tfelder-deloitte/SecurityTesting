{"version":3,"sources":["webpack:///./src/main/js/api/user_groups.ts","webpack:///./src/main/js/apps/groups/components/Form.tsx","webpack:///./src/main/js/apps/groups/components/Header.tsx","webpack:///./src/main/js/apps/groups/components/DeleteForm.tsx","webpack:///./src/main/js/apps/groups/components/EditMembersModal.tsx","webpack:///./src/main/js/apps/groups/components/EditMembers.tsx","webpack:///./src/main/js/apps/groups/components/ListItem.tsx","webpack:///./src/main/js/apps/groups/components/List.tsx","webpack:///./src/main/js/apps/groups/components/App.tsx","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx"],"names":["searchUsersGroups","data","catch","getUsersInGroup","addUserToGroup","removeUserFromGroup","createGroup","then","r","updateGroup","deleteGroup","props","handleSubmit","onSubmit","description","state","name","onClose","handleDescriptionChange","event","setState","currentTarget","value","handleNameChange","group","render","header","this","size","onCloseClick","onFormSubmit","submitting","className","htmlFor","autoFocus","id","maxLength","onChange","required","type","loading","disabled","confirmButtonText","onClick","mounted","createModal","handleCreateClick","handleClose","onCreate","componentDidMount","componentWillUnmount","DeleteForm","fetchUsers","searchParams","organization","p","page","ps","pageSize","q","query","undefined","selected","filter","prevState","more","users","newSelectedUsers","user","map","selectedUsers","needToReload","lastSearchParams","usersTotalCount","total","handleSelect","login","handleUnselect","renderElement","modalHeader","contentLabel","onRequestClose","elements","elementsTotalCount","SelectList","All","onSearch","onSelect","onUnselect","selectedElements","withPaging","modal","handleMembersClick","handleModalClose","onEdit","deleteForm","editForm","handleDeleteClick","handleEditClick","closeDeleteForm","closeEditForm","handleDeleteFormSubmit","onDelete","handleEditFormSubmit","default","membersCount","onEditMembers","ActionsDropdown","destructive","List","showAnyone","key","colSpan","groups","makeFetchGroupsRequest","stopLoading","fetchGroups","paging","fetchMoreGroups","pageIndex","search","refresh","handleCreate","handleDelete","handleEdit","includes","toLowerCase","Suggestions","suggestions","defer","title","minLength","placeholder","count","length","loadMore","ready","Consumer","addSuggestions","removeSuggestions","SuggestionsInner","componentDidUpdate","prevProps"],"mappings":"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","file":"js/20.1593679646964.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function searchUsersGroups(data: {\n  f?: string;\n  organization?: string;\n  p?: number;\n  ps?: number;\n  q?: string;\n}): Promise<{ groups: T.Group[]; paging: T.Paging }> {\n  return getJSON('/api/user_groups/search', data).catch(throwGlobalError);\n}\n\nexport function getUsersInGroup(data: {\n  id?: number;\n  name?: string;\n  organization?: string;\n  p?: number;\n  ps?: number;\n  q?: string;\n  selected?: string;\n}): Promise<T.Paging & { users: T.UserSelected[] }> {\n  return getJSON('/api/user_groups/users', data).catch(throwGlobalError);\n}\n\nexport function addUserToGroup(data: {\n  id?: string;\n  name?: string;\n  login?: string;\n  organization?: string;\n}) {\n  return post('/api/user_groups/add_user', data).catch(throwGlobalError);\n}\n\nexport function removeUserFromGroup(data: {\n  id?: string;\n  name?: string;\n  login?: string;\n  organization?: string;\n}) {\n  return post('/api/user_groups/remove_user', data).catch(throwGlobalError);\n}\n\nexport function createGroup(data: {\n  description?: string;\n  organization: string | undefined;\n  name: string;\n}): Promise<T.Group> {\n  return postJSON('/api/user_groups/create', data).then(r => r.group, throwGlobalError);\n}\n\nexport function updateGroup(data: { description?: string; id: number; name?: string }) {\n  return post('/api/user_groups/update', data).catch(throwGlobalError);\n}\n\nexport function deleteGroup(data: { name: string; organization: string | undefined }) {\n  return post('/api/user_groups/delete', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport SimpleModal from 'sonar-ui-common/components/controls/SimpleModal';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  confirmButtonText: string;\n  group?: T.Group;\n  header: string;\n  onClose: () => void;\n  onSubmit: (data: { description: string; name: string }) => Promise<void>;\n}\n\ninterface State {\n  description: string;\n  name: string;\n}\n\nexport default class Form extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      description: (props.group && props.group.description) || '',\n      name: (props.group && props.group.name) || ''\n    };\n  }\n\n  handleSubmit = () => {\n    return this.props\n      .onSubmit({ description: this.state.description, name: this.state.name })\n      .then(this.props.onClose);\n  };\n\n  handleDescriptionChange = (event: React.SyntheticEvent<HTMLTextAreaElement>) => {\n    this.setState({ description: event.currentTarget.value });\n  };\n\n  handleNameChange = (event: React.SyntheticEvent<HTMLInputElement>) => {\n    this.setState({ name: event.currentTarget.value });\n  };\n\n  render() {\n    return (\n      <SimpleModal\n        header={this.props.header}\n        onClose={this.props.onClose}\n        onSubmit={this.handleSubmit}\n        size=\"small\">\n        {({ onCloseClick, onFormSubmit, submitting }) => (\n          <form onSubmit={onFormSubmit}>\n            <header className=\"modal-head\">\n              <h2>{this.props.header}</h2>\n            </header>\n\n            <div className=\"modal-body\">\n              <div className=\"modal-field\">\n                <label htmlFor=\"create-group-name\">\n                  {translate('name')}\n                  <em className=\"mandatory\">*</em>\n                </label>\n                <input\n                  autoFocus={true}\n                  id=\"create-group-name\"\n                  maxLength={255}\n                  name=\"name\"\n                  onChange={this.handleNameChange}\n                  required={true}\n                  size={50}\n                  type=\"text\"\n                  value={this.state.name}\n                />\n              </div>\n              <div className=\"modal-field\">\n                <label htmlFor=\"create-group-description\">{translate('description')}</label>\n                <textarea\n                  id=\"create-group-description\"\n                  name=\"description\"\n                  onChange={this.handleDescriptionChange}\n                  value={this.state.description}\n                />\n              </div>\n            </div>\n\n            <footer className=\"modal-foot\">\n              <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n              <SubmitButton disabled={submitting}>{this.props.confirmButtonText}</SubmitButton>\n              <ResetButtonLink onClick={onCloseClick}>{translate('cancel')}</ResetButtonLink>\n            </footer>\n          </form>\n        )}\n      </SimpleModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport Form from './Form';\n\ninterface Props {\n  loading: boolean;\n  onCreate: (data: { description: string; name: string }) => Promise<void>;\n}\n\ninterface State {\n  createModal: boolean;\n}\n\nexport default class Header extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { createModal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleCreateClick = () => {\n    this.setState({ createModal: true });\n  };\n\n  handleClose = () => {\n    if (this.mounted) {\n      this.setState({ createModal: false });\n    }\n  };\n\n  handleSubmit = (data: { name: string; description: string }) => {\n    return this.props.onCreate(data);\n  };\n\n  render() {\n    return (\n      <>\n        <header className=\"page-header\" id=\"groups-header\">\n          <h1 className=\"page-title\">{translate('user_groups.page')}</h1>\n\n          <DeferredSpinner loading={this.props.loading} />\n\n          <div className=\"page-actions\">\n            <Button id=\"groups-create\" onClick={this.handleCreateClick}>\n              {translate('groups.create_group')}\n            </Button>\n          </div>\n\n          <p className=\"page-description\">{translate('user_groups.page.description')}</p>\n        </header>\n        {this.state.createModal && (\n          <Form\n            confirmButtonText={translate('create')}\n            header={translate('groups.create_group')}\n            onClose={this.handleClose}\n            onSubmit={this.handleSubmit}\n          />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport SimpleModal from 'sonar-ui-common/components/controls/SimpleModal';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\n\ninterface Props {\n  group: T.Group;\n  onClose: () => void;\n  onSubmit: () => Promise<void>;\n}\n\nexport default function DeleteForm({ group, onClose, onSubmit }: Props) {\n  const header = translate('groups.delete_group');\n\n  return (\n    <SimpleModal header={header} onClose={onClose} onSubmit={onSubmit}>\n      {({ onCloseClick, onFormSubmit, submitting }) => (\n        <form onSubmit={onFormSubmit}>\n          <header className=\"modal-head\">\n            <h2>{header}</h2>\n          </header>\n\n          <div className=\"modal-body\">\n            {translateWithParameters('groups.delete_group.confirmation', group.name)}\n          </div>\n\n          <footer className=\"modal-foot\">\n            <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n            <SubmitButton className=\"button-red\" disabled={submitting}>\n              {translate('delete')}\n            </SubmitButton>\n            <ResetButtonLink disabled={submitting} onClick={onCloseClick}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          </footer>\n        </form>\n      )}\n    </SimpleModal>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { find, without } from 'lodash';\nimport * as React from 'react';\nimport { ResetButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport SelectList, {\n  SelectListFilter,\n  SelectListSearchParams\n} from 'sonar-ui-common/components/controls/SelectList';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { addUserToGroup, getUsersInGroup, removeUserFromGroup } from '../../../api/user_groups';\n\ninterface Props {\n  group: T.Group;\n  onClose: () => void;\n  organization: string | undefined;\n}\n\ninterface State {\n  lastSearchParams?: SelectListSearchParams;\n  needToReload: boolean;\n  users: T.UserSelected[];\n  usersTotalCount?: number;\n  selectedUsers: string[];\n}\n\nexport default class EditMembersModal extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      needToReload: false,\n      users: [],\n      selectedUsers: []\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchUsers = (searchParams: SelectListSearchParams) =>\n    getUsersInGroup({\n      name: this.props.group.name,\n      organization: this.props.organization,\n      p: searchParams.page,\n      ps: searchParams.pageSize,\n      q: searchParams.query !== '' ? searchParams.query : undefined,\n      selected: searchParams.filter\n    }).then(data => {\n      if (this.mounted) {\n        this.setState(prevState => {\n          const more = searchParams.page != null && searchParams.page > 1;\n\n          const users = more ? [...prevState.users, ...data.users] : data.users;\n          const newSelectedUsers = data.users.filter(user => user.selected).map(user => user.login);\n          const selectedUsers = more\n            ? [...prevState.selectedUsers, ...newSelectedUsers]\n            : newSelectedUsers;\n\n          return {\n            needToReload: false,\n            lastSearchParams: searchParams,\n            loading: false,\n            users,\n            usersTotalCount: data.total,\n            selectedUsers\n          };\n        });\n      }\n    });\n\n  handleSelect = (login: string) =>\n    addUserToGroup({\n      name: this.props.group.name,\n      login,\n      organization: this.props.organization\n    }).then(() => {\n      if (this.mounted) {\n        this.setState((state: State) => ({\n          needToReload: true,\n          selectedUsers: [...state.selectedUsers, login]\n        }));\n      }\n    });\n\n  handleUnselect = (login: string) =>\n    removeUserFromGroup({\n      name: this.props.group.name,\n      login,\n      organization: this.props.organization\n    }).then(() => {\n      if (this.mounted) {\n        this.setState((state: State) => ({\n          needToReload: true,\n          selectedUsers: without(state.selectedUsers, login)\n        }));\n      }\n    });\n\n  renderElement = (login: string): React.ReactNode => {\n    const user = find(this.state.users, { login });\n    return (\n      <div className=\"select-list-list-item\">\n        {user === undefined ? (\n          login\n        ) : (\n          <>\n            {user.name}\n            <br />\n            <span className=\"note\">{user.login}</span>\n          </>\n        )}\n      </div>\n    );\n  };\n\n  render() {\n    const modalHeader = translate('users.update');\n    return (\n      <Modal contentLabel={modalHeader} onRequestClose={this.props.onClose}>\n        <header className=\"modal-head\">\n          <h2>{modalHeader}</h2>\n        </header>\n\n        <div className=\"modal-body modal-container\">\n          <SelectList\n            elements={this.state.users.map(user => user.login)}\n            elementsTotalCount={this.state.usersTotalCount}\n            needToReload={\n              this.state.needToReload &&\n              this.state.lastSearchParams &&\n              this.state.lastSearchParams.filter !== SelectListFilter.All\n            }\n            onSearch={this.fetchUsers}\n            onSelect={this.handleSelect}\n            onUnselect={this.handleUnselect}\n            renderElement={this.renderElement}\n            selectedElements={this.state.selectedUsers}\n            withPaging={true}\n          />\n        </div>\n\n        <footer className=\"modal-foot\">\n          <ResetButtonLink onClick={this.props.onClose}>{translate('Done')}</ResetButtonLink>\n        </footer>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ButtonIcon } from 'sonar-ui-common/components/controls/buttons';\nimport BulletListIcon from 'sonar-ui-common/components/icons/BulletListIcon';\nimport EditMembersModal from './EditMembersModal';\n\ninterface Props {\n  group: T.Group;\n  onEdit: () => void;\n  organization: string | undefined;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class EditMembers extends React.PureComponent<Props, State> {\n  container?: HTMLElement | null;\n  mounted = false;\n  state: State = { modal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleMembersClick = () => {\n    this.setState({ modal: true });\n  };\n\n  handleModalClose = () => {\n    if (this.mounted) {\n      this.setState({ modal: false });\n      this.props.onEdit();\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <ButtonIcon className=\"button-small\" onClick={this.handleMembersClick}>\n          <BulletListIcon />\n        </ButtonIcon>\n        {this.state.modal && (\n          <EditMembersModal\n            group={this.props.group}\n            onClose={this.handleModalClose}\n            organization={this.props.organization}\n          />\n        )}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ActionsDropdown, {\n  ActionsDropdownDivider,\n  ActionsDropdownItem\n} from 'sonar-ui-common/components/controls/ActionsDropdown';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { omitNil } from 'sonar-ui-common/helpers/request';\nimport DeleteForm from './DeleteForm';\nimport EditMembers from './EditMembers';\nimport Form from './Form';\n\ninterface Props {\n  group: T.Group;\n  onDelete: (name: string) => Promise<void>;\n  onEdit: (data: { description?: string; id: number; name?: string }) => Promise<void>;\n  onEditMembers: () => void;\n  organization: string | undefined;\n}\n\ninterface State {\n  deleteForm: boolean;\n  editForm: boolean;\n}\n\nexport default class ListItem extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { deleteForm: false, editForm: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleDeleteClick = () => {\n    this.setState({ deleteForm: true });\n  };\n\n  handleEditClick = () => {\n    this.setState({ editForm: true });\n  };\n\n  closeDeleteForm = () => {\n    if (this.mounted) {\n      this.setState({ deleteForm: false });\n    }\n  };\n\n  closeEditForm = () => {\n    if (this.mounted) {\n      this.setState({ editForm: false });\n    }\n  };\n\n  handleDeleteFormSubmit = () => {\n    return this.props.onDelete(this.props.group.name);\n  };\n\n  handleEditFormSubmit = ({ name, description }: { name: string; description: string }) => {\n    const { group } = this.props;\n    return this.props.onEdit({\n      description,\n      id: group.id,\n      // pass `name` only if it has changed, otherwise the WS fails\n      ...omitNil({ name: name !== group.name ? name : undefined })\n    });\n  };\n\n  render() {\n    const { group } = this.props;\n\n    return (\n      <tr data-id={group.id}>\n        <td className=\" width-20\">\n          <strong className=\"js-group-name\">{group.name}</strong>\n          {group.default && <span className=\"little-spacer-left\">({translate('default')})</span>}\n        </td>\n\n        <td className=\"width-10\">\n          <div className=\"display-flex-center\">\n            <span className=\"spacer-right\">{group.membersCount}</span>\n            {!group.default && (\n              <EditMembers\n                group={group}\n                onEdit={this.props.onEditMembers}\n                organization={this.props.organization}\n              />\n            )}\n          </div>\n        </td>\n\n        <td className=\"width-40\">\n          <span className=\"js-group-description\">{group.description}</span>\n        </td>\n\n        <td className=\"thin nowrap text-right\">\n          {!group.default && (\n            <ActionsDropdown>\n              <ActionsDropdownItem className=\"js-group-update\" onClick={this.handleEditClick}>\n                {translate('update_details')}\n              </ActionsDropdownItem>\n              <ActionsDropdownDivider />\n              <ActionsDropdownItem\n                className=\"js-group-delete\"\n                destructive={true}\n                onClick={this.handleDeleteClick}>\n                {translate('delete')}\n              </ActionsDropdownItem>\n            </ActionsDropdown>\n          )}\n        </td>\n\n        {this.state.deleteForm && (\n          <DeleteForm\n            group={group}\n            onClose={this.closeDeleteForm}\n            onSubmit={this.handleDeleteFormSubmit}\n          />\n        )}\n\n        {this.state.editForm && (\n          <Form\n            confirmButtonText={translate('update_verb')}\n            group={group}\n            header={translate('groups.update_group')}\n            onClose={this.closeEditForm}\n            onSubmit={this.handleEditFormSubmit}\n          />\n        )}\n      </tr>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport ListItem from './ListItem';\n\ninterface Props {\n  groups: T.Group[];\n  onDelete: (name: string) => Promise<void>;\n  onEdit: (data: { description?: string; id: number; name?: string }) => Promise<void>;\n  onEditMembers: () => void;\n  organization: string | undefined;\n  showAnyone: boolean;\n}\n\nexport default function List(props: Props) {\n  return (\n    <div className=\"boxed-group boxed-group-inner\">\n      <table className=\"data zebra zebra-hover\" id=\"groups-list\">\n        <thead>\n          <tr>\n            <th />\n            <th className=\"nowrap\">{translate('members')}</th>\n            <th className=\"nowrap\">{translate('description')}</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>\n          {props.showAnyone && (\n            <tr className=\"js-anyone\" key=\"anyone\">\n              <td className=\"width-20\">\n                <strong className=\"js-group-name\">{translate('groups.anyone')}</strong>\n              </td>\n              <td className=\"width-10\" />\n              <td className=\"width-40\" colSpan={2}>\n                <span className=\"js-group-description\">\n                  {translate('user_groups.anyone.description')}\n                </span>\n              </td>\n            </tr>\n          )}\n\n          {sortBy(props.groups, group => group.name.toLowerCase()).map(group => (\n            <ListItem\n              group={group}\n              key={group.id}\n              onDelete={props.onDelete}\n              onEdit={props.onEdit}\n              onEditMembers={props.onEditMembers}\n              organization={props.organization}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport ListFooter from 'sonar-ui-common/components/controls/ListFooter';\nimport SearchBox from 'sonar-ui-common/components/controls/SearchBox';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { createGroup, deleteGroup, searchUsersGroups, updateGroup } from '../../../api/user_groups';\nimport Suggestions from '../../../app/components/embed-docs-modal/Suggestions';\nimport Header from './Header';\nimport List from './List';\n\ninterface Props {\n  organization?: Pick<T.Organization, 'key'>;\n}\n\ninterface State {\n  groups?: T.Group[];\n  loading: boolean;\n  paging?: T.Paging;\n  query: string;\n}\n\nexport default class App extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { loading: true, query: '' };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchGroups();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  get organization() {\n    return this.props.organization && this.props.organization.key;\n  }\n\n  makeFetchGroupsRequest = (data?: { p?: number; q?: string }) => {\n    this.setState({ loading: true });\n    return searchUsersGroups({\n      organization: this.organization,\n      q: this.state.query,\n      ...data\n    });\n  };\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  fetchGroups = (data?: { p?: number; q?: string }) => {\n    this.makeFetchGroupsRequest(data).then(({ groups, paging }) => {\n      if (this.mounted) {\n        this.setState({ groups, loading: false, paging });\n      }\n    }, this.stopLoading);\n  };\n\n  fetchMoreGroups = () => {\n    const { paging } = this.state;\n    if (paging && paging.total > paging.pageIndex * paging.pageSize) {\n      this.makeFetchGroupsRequest({ p: paging.pageIndex + 1 }).then(({ groups, paging }) => {\n        if (this.mounted) {\n          this.setState(({ groups: existingGroups = [] }) => ({\n            groups: [...existingGroups, ...groups],\n            loading: false,\n            paging\n          }));\n        }\n      }, this.stopLoading);\n    }\n  };\n\n  search = (query: string) => {\n    this.fetchGroups({ q: query });\n    this.setState({ query });\n  };\n\n  refresh = () => {\n    this.fetchGroups({ q: this.state.query });\n  };\n\n  handleCreate = (data: { description: string; name: string }) => {\n    return createGroup({ ...data, organization: this.organization }).then(group => {\n      if (this.mounted) {\n        this.setState(({ groups = [] }: State) => ({\n          groups: [...groups, group]\n        }));\n      }\n    });\n  };\n\n  handleDelete = (name: string) => {\n    return deleteGroup({ name, organization: this.organization }).then(() => {\n      if (this.mounted) {\n        this.setState(({ groups = [] }: State) => ({\n          groups: groups.filter(group => group.name !== name)\n        }));\n      }\n    });\n  };\n\n  handleEdit = (data: { description?: string; id: number; name?: string }) => {\n    return updateGroup(data).then(() => {\n      if (this.mounted) {\n        this.setState(({ groups = [] }: State) => ({\n          groups: groups.map(group => (group.id === data.id ? { ...group, ...data } : group))\n        }));\n      }\n    });\n  };\n\n  render() {\n    const { groups, loading, paging, query } = this.state;\n\n    const showAnyone =\n      this.props.organization === undefined && 'anyone'.includes(query.toLowerCase());\n\n    return (\n      <>\n        <Suggestions suggestions=\"user_groups\" />\n        <Helmet defer={false} title={translate('user_groups.page')} />\n        <div className=\"page page-limited\" id=\"groups-page\">\n          <Header loading={loading} onCreate={this.handleCreate} />\n\n          <SearchBox\n            className=\"big-spacer-bottom\"\n            id=\"groups-search\"\n            minLength={2}\n            onChange={this.search}\n            placeholder={translate('search.search_by_name')}\n            value={query}\n          />\n\n          {groups !== undefined && (\n            <List\n              groups={groups}\n              onDelete={this.handleDelete}\n              onEdit={this.handleEdit}\n              onEditMembers={this.refresh}\n              organization={this.organization}\n              showAnyone={showAnyone}\n            />\n          )}\n\n          {groups !== undefined && paging !== undefined && (\n            <div id=\"groups-list-footer\">\n              <ListFooter\n                count={showAnyone ? groups.length + 1 : groups.length}\n                loadMore={this.fetchMoreGroups}\n                ready={!loading}\n                total={showAnyone ? paging.total + 1 : paging.total}\n              />\n            </div>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2020 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n"],"sourceRoot":""}